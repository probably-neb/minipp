var data = {lines:[
{"lineNum":"    1","line":"const std = @import(\"../std.zig\");"},
{"lineNum":"    2","line":""},
{"lineNum":"    3","line":"pub fn SeekableStream("},
{"lineNum":"    4","line":"    comptime Context: type,"},
{"lineNum":"    5","line":"    comptime SeekErrorType: type,"},
{"lineNum":"    6","line":"    comptime GetSeekPosErrorType: type,"},
{"lineNum":"    7","line":"    comptime seekToFn: fn (context: Context, pos: u64) SeekErrorType!void,"},
{"lineNum":"    8","line":"    comptime seekByFn: fn (context: Context, pos: i64) SeekErrorType!void,"},
{"lineNum":"    9","line":"    comptime getPosFn: fn (context: Context) GetSeekPosErrorType!u64,"},
{"lineNum":"   10","line":"    comptime getEndPosFn: fn (context: Context) GetSeekPosErrorType!u64,"},
{"lineNum":"   11","line":") type {"},
{"lineNum":"   12","line":"    return struct {"},
{"lineNum":"   13","line":"        context: Context,"},
{"lineNum":"   14","line":""},
{"lineNum":"   15","line":"        const Self = @This();"},
{"lineNum":"   16","line":"        pub const SeekError = SeekErrorType;"},
{"lineNum":"   17","line":"        pub const GetSeekPosError = GetSeekPosErrorType;"},
{"lineNum":"   18","line":""},
{"lineNum":"   19","line":"        pub fn seekTo(self: Self, pos: u64) SeekError!void {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   20","line":"            return seekToFn(self.context, pos);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   21","line":"        }"},
{"lineNum":"   22","line":""},
{"lineNum":"   23","line":"        pub fn seekBy(self: Self, amt: i64) SeekError!void {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   24","line":"            return seekByFn(self.context, amt);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   25","line":"        }"},
{"lineNum":"   26","line":""},
{"lineNum":"   27","line":"        pub fn getEndPos(self: Self) GetSeekPosError!u64 {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   28","line":"            return getEndPosFn(self.context);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   29","line":"        }"},
{"lineNum":"   30","line":""},
{"lineNum":"   31","line":"        pub fn getPos(self: Self) GetSeekPosError!u64 {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   32","line":"            return getPosFn(self.context);","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   33","line":"        }"},
{"lineNum":"   34","line":"    };"},
{"lineNum":"   35","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "test", "date" : "2024-04-26 16:14:49", "instrumented" : 8, "covered" : 0,};
var merged_data = [];
