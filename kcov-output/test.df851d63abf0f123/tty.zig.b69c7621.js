var data = {lines:[
{"lineNum":"    1","line":"const std = @import(\"std\");"},
{"lineNum":"    2","line":"const builtin = @import(\"builtin\");"},
{"lineNum":"    3","line":"const File = std.fs.File;"},
{"lineNum":"    4","line":"const process = std.process;"},
{"lineNum":"    5","line":"const windows = std.os.windows;"},
{"lineNum":"    6","line":"const native_os = builtin.os.tag;"},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":"/// Detect suitable TTY configuration options for the given file (commonly stdout/stderr)."},
{"lineNum":"    9","line":"/// This includes feature checks for ANSI escape codes and the Windows console API, as well as"},
{"lineNum":"   10","line":"/// respecting the `NO_COLOR` and `YES_COLOR` environment variables to override the default."},
{"lineNum":"   11","line":"pub fn detectConfig(file: File) Config {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   12","line":"    const force_color: ?bool = if (builtin.os.tag == .wasi)"},
{"lineNum":"   13","line":"        null // wasi does not support environment variables"},
{"lineNum":"   14","line":"    else if (process.hasEnvVarConstant(\"NO_COLOR\"))","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   15","line":"        false"},
{"lineNum":"   16","line":"    else if (process.hasEnvVarConstant(\"YES_COLOR\"))","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   17","line":"        true"},
{"lineNum":"   18","line":"    else"},
{"lineNum":"   19","line":"        null;"},
{"lineNum":"   20","line":""},
{"lineNum":"   21","line":"    if (force_color == false) return .no_color;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   22","line":""},
{"lineNum":"   23","line":"    if (file.supportsAnsiEscapeCodes()) return .escape_codes;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   24","line":""},
{"lineNum":"   25","line":"    if (native_os == .windows and file.isTty()) {"},
{"lineNum":"   26","line":"        var info: windows.CONSOLE_SCREEN_BUFFER_INFO = undefined;"},
{"lineNum":"   27","line":"        if (windows.kernel32.GetConsoleScreenBufferInfo(file.handle, &info) != windows.TRUE) {"},
{"lineNum":"   28","line":"            return if (force_color == true) .escape_codes else .no_color;"},
{"lineNum":"   29","line":"        }"},
{"lineNum":"   30","line":"        return .{ .windows_api = .{"},
{"lineNum":"   31","line":"            .handle = file.handle,"},
{"lineNum":"   32","line":"            .reset_attributes = info.wAttributes,"},
{"lineNum":"   33","line":"        } };"},
{"lineNum":"   34","line":"    }"},
{"lineNum":"   35","line":""},
{"lineNum":"   36","line":"    return if (force_color == true) .escape_codes else .no_color;","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   37","line":"}"},
{"lineNum":"   38","line":""},
{"lineNum":"   39","line":"pub const Color = enum {"},
{"lineNum":"   40","line":"    black,"},
{"lineNum":"   41","line":"    red,"},
{"lineNum":"   42","line":"    green,"},
{"lineNum":"   43","line":"    yellow,"},
{"lineNum":"   44","line":"    blue,"},
{"lineNum":"   45","line":"    magenta,"},
{"lineNum":"   46","line":"    cyan,"},
{"lineNum":"   47","line":"    white,"},
{"lineNum":"   48","line":"    bright_black,"},
{"lineNum":"   49","line":"    bright_red,"},
{"lineNum":"   50","line":"    bright_green,"},
{"lineNum":"   51","line":"    bright_yellow,"},
{"lineNum":"   52","line":"    bright_blue,"},
{"lineNum":"   53","line":"    bright_magenta,"},
{"lineNum":"   54","line":"    bright_cyan,"},
{"lineNum":"   55","line":"    bright_white,"},
{"lineNum":"   56","line":"    dim,"},
{"lineNum":"   57","line":"    bold,"},
{"lineNum":"   58","line":"    reset,"},
{"lineNum":"   59","line":"};"},
{"lineNum":"   60","line":""},
{"lineNum":"   61","line":"/// Provides simple functionality for manipulating the terminal in some way,"},
{"lineNum":"   62","line":"/// such as coloring text, etc."},
{"lineNum":"   63","line":"pub const Config = union(enum) {"},
{"lineNum":"   64","line":"    no_color,"},
{"lineNum":"   65","line":"    escape_codes,"},
{"lineNum":"   66","line":"    windows_api: if (native_os == .windows) WindowsContext else void,"},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"    pub const WindowsContext = struct {"},
{"lineNum":"   69","line":"        handle: File.Handle,"},
{"lineNum":"   70","line":"        reset_attributes: u16,"},
{"lineNum":"   71","line":"    };"},
{"lineNum":"   72","line":""},
{"lineNum":"   73","line":"    pub fn setColor(conf: Config, out_stream: anytype, color: Color) !void {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   74","line":"        nosuspend switch (conf) {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   75","line":"            .no_color => return,","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"   76","line":"            .escape_codes => {"},
{"lineNum":"   77","line":"                const color_string = switch (color) {","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   78","line":"                    .black => \"\\x1b[30m\","},
{"lineNum":"   79","line":"                    .red => \"\\x1b[31m\","},
{"lineNum":"   80","line":"                    .green => \"\\x1b[32m\","},
{"lineNum":"   81","line":"                    .yellow => \"\\x1b[33m\","},
{"lineNum":"   82","line":"                    .blue => \"\\x1b[34m\","},
{"lineNum":"   83","line":"                    .magenta => \"\\x1b[35m\","},
{"lineNum":"   84","line":"                    .cyan => \"\\x1b[36m\","},
{"lineNum":"   85","line":"                    .white => \"\\x1b[37m\","},
{"lineNum":"   86","line":"                    .bright_black => \"\\x1b[90m\","},
{"lineNum":"   87","line":"                    .bright_red => \"\\x1b[91m\","},
{"lineNum":"   88","line":"                    .bright_green => \"\\x1b[92m\","},
{"lineNum":"   89","line":"                    .bright_yellow => \"\\x1b[93m\","},
{"lineNum":"   90","line":"                    .bright_blue => \"\\x1b[94m\","},
{"lineNum":"   91","line":"                    .bright_magenta => \"\\x1b[95m\","},
{"lineNum":"   92","line":"                    .bright_cyan => \"\\x1b[96m\","},
{"lineNum":"   93","line":"                    .bright_white => \"\\x1b[97m\","},
{"lineNum":"   94","line":"                    .bold => \"\\x1b[1m\","},
{"lineNum":"   95","line":"                    .dim => \"\\x1b[2m\","},
{"lineNum":"   96","line":"                    .reset => \"\\x1b[0m\","},
{"lineNum":"   97","line":"                };"},
{"lineNum":"   98","line":"                try out_stream.writeAll(color_string);","class":"lineNoCov","hits":"0","possible_hits":"2",},
{"lineNum":"   99","line":"            },"},
{"lineNum":"  100","line":"            .windows_api => |ctx| if (native_os == .windows) {"},
{"lineNum":"  101","line":"                const attributes = switch (color) {"},
{"lineNum":"  102","line":"                    .black => 0,"},
{"lineNum":"  103","line":"                    .red => windows.FOREGROUND_RED,"},
{"lineNum":"  104","line":"                    .green => windows.FOREGROUND_GREEN,"},
{"lineNum":"  105","line":"                    .yellow => windows.FOREGROUND_RED | windows.FOREGROUND_GREEN,"},
{"lineNum":"  106","line":"                    .blue => windows.FOREGROUND_BLUE,"},
{"lineNum":"  107","line":"                    .magenta => windows.FOREGROUND_RED | windows.FOREGROUND_BLUE,"},
{"lineNum":"  108","line":"                    .cyan => windows.FOREGROUND_GREEN | windows.FOREGROUND_BLUE,"},
{"lineNum":"  109","line":"                    .white => windows.FOREGROUND_RED | windows.FOREGROUND_GREEN | windows.FOREGROUND_BLUE,"},
{"lineNum":"  110","line":"                    .bright_black => windows.FOREGROUND_INTENSITY,"},
{"lineNum":"  111","line":"                    .bright_red => windows.FOREGROUND_RED | windows.FOREGROUND_INTENSITY,"},
{"lineNum":"  112","line":"                    .bright_green => windows.FOREGROUND_GREEN | windows.FOREGROUND_INTENSITY,"},
{"lineNum":"  113","line":"                    .bright_yellow => windows.FOREGROUND_RED | windows.FOREGROUND_GREEN | windows.FOREGROUND_INTENSITY,"},
{"lineNum":"  114","line":"                    .bright_blue => windows.FOREGROUND_BLUE | windows.FOREGROUND_INTENSITY,"},
{"lineNum":"  115","line":"                    .bright_magenta => windows.FOREGROUND_RED | windows.FOREGROUND_BLUE | windows.FOREGROUND_INTENSITY,"},
{"lineNum":"  116","line":"                    .bright_cyan => windows.FOREGROUND_GREEN | windows.FOREGROUND_BLUE | windows.FOREGROUND_INTENSITY,"},
{"lineNum":"  117","line":"                    .bright_white, .bold => windows.FOREGROUND_RED | windows.FOREGROUND_GREEN | windows.FOREGROUND_BLUE | windows.FOREGROUND_INTENSITY,"},
{"lineNum":"  118","line":"                    // \"dim\" is not supported using basic character attributes, but let\'s still make it do *something*."},
{"lineNum":"  119","line":"                    // This matches the old behavior of TTY.Color before the bright variants were added."},
{"lineNum":"  120","line":"                    .dim => windows.FOREGROUND_INTENSITY,"},
{"lineNum":"  121","line":"                    .reset => ctx.reset_attributes,"},
{"lineNum":"  122","line":"                };"},
{"lineNum":"  123","line":"                try windows.SetConsoleTextAttribute(ctx.handle, attributes);"},
{"lineNum":"  124","line":"            } else {"},
{"lineNum":"  125","line":"                unreachable;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  126","line":"            },"},
{"lineNum":"  127","line":"        };"},
{"lineNum":"  128","line":"    }"},
{"lineNum":"  129","line":"};"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "test", "date" : "2024-04-26 16:14:49", "instrumented" : 12, "covered" : 0,};
var merged_data = [];
