var data = {lines:[
{"lineNum":"    1","line":"const std = @import(\"../../std.zig\");"},
{"lineNum":"    2","line":"const maxInt = std.math.maxInt;"},
{"lineNum":"    3","line":"const linux = std.os.linux;"},
{"lineNum":"    4","line":"const SYS = linux.SYS;"},
{"lineNum":"    5","line":"const iovec = std.os.iovec;"},
{"lineNum":"    6","line":"const iovec_const = std.os.iovec_const;"},
{"lineNum":"    7","line":""},
{"lineNum":"    8","line":"const pid_t = linux.pid_t;"},
{"lineNum":"    9","line":"const uid_t = linux.uid_t;"},
{"lineNum":"   10","line":"const gid_t = linux.gid_t;"},
{"lineNum":"   11","line":"const clock_t = linux.clock_t;"},
{"lineNum":"   12","line":"const stack_t = linux.stack_t;"},
{"lineNum":"   13","line":"const sigset_t = linux.sigset_t;"},
{"lineNum":"   14","line":"const sockaddr = linux.sockaddr;"},
{"lineNum":"   15","line":"const socklen_t = linux.socklen_t;"},
{"lineNum":"   16","line":"const timespec = linux.timespec;"},
{"lineNum":"   17","line":""},
{"lineNum":"   18","line":"pub fn syscall0(number: SYS) usize {","class":"lineCov","hits":"1","order":"525","possible_hits":"1",},
{"lineNum":"   19","line":"    return asm volatile (\"syscall\"","class":"lineCov","hits":"1","order":"526","possible_hits":"1",},
{"lineNum":"   20","line":"        : [ret] \"={rax}\" (-> usize),"},
{"lineNum":"   21","line":"        : [number] \"{rax}\" (@intFromEnum(number)),"},
{"lineNum":"   22","line":"        : \"rcx\", \"r11\", \"memory\""},
{"lineNum":"   23","line":"    );"},
{"lineNum":"   24","line":"}"},
{"lineNum":"   25","line":""},
{"lineNum":"   26","line":"pub fn syscall1(number: SYS, arg1: usize) usize {","class":"lineCov","hits":"1","order":"3546","possible_hits":"1",},
{"lineNum":"   27","line":"    return asm volatile (\"syscall\"","class":"lineCov","hits":"1","order":"3547","possible_hits":"1",},
{"lineNum":"   28","line":"        : [ret] \"={rax}\" (-> usize),"},
{"lineNum":"   29","line":"        : [number] \"{rax}\" (@intFromEnum(number)),"},
{"lineNum":"   30","line":"          [arg1] \"{rdi}\" (arg1),"},
{"lineNum":"   31","line":"        : \"rcx\", \"r11\", \"memory\""},
{"lineNum":"   32","line":"    );"},
{"lineNum":"   33","line":"}"},
{"lineNum":"   34","line":""},
{"lineNum":"   35","line":"pub fn syscall2(number: SYS, arg1: usize, arg2: usize) usize {","class":"lineCov","hits":"1","order":"92","possible_hits":"1",},
{"lineNum":"   36","line":"    return asm volatile (\"syscall\"","class":"lineCov","hits":"1","order":"93","possible_hits":"1",},
{"lineNum":"   37","line":"        : [ret] \"={rax}\" (-> usize),"},
{"lineNum":"   38","line":"        : [number] \"{rax}\" (@intFromEnum(number)),"},
{"lineNum":"   39","line":"          [arg1] \"{rdi}\" (arg1),"},
{"lineNum":"   40","line":"          [arg2] \"{rsi}\" (arg2),"},
{"lineNum":"   41","line":"        : \"rcx\", \"r11\", \"memory\""},
{"lineNum":"   42","line":"    );"},
{"lineNum":"   43","line":"}"},
{"lineNum":"   44","line":""},
{"lineNum":"   45","line":"pub fn syscall3(number: SYS, arg1: usize, arg2: usize, arg3: usize) usize {","class":"lineCov","hits":"1","order":"369","possible_hits":"1",},
{"lineNum":"   46","line":"    return asm volatile (\"syscall\"","class":"lineCov","hits":"1","order":"370","possible_hits":"1",},
{"lineNum":"   47","line":"        : [ret] \"={rax}\" (-> usize),"},
{"lineNum":"   48","line":"        : [number] \"{rax}\" (@intFromEnum(number)),"},
{"lineNum":"   49","line":"          [arg1] \"{rdi}\" (arg1),"},
{"lineNum":"   50","line":"          [arg2] \"{rsi}\" (arg2),"},
{"lineNum":"   51","line":"          [arg3] \"{rdx}\" (arg3),"},
{"lineNum":"   52","line":"        : \"rcx\", \"r11\", \"memory\""},
{"lineNum":"   53","line":"    );"},
{"lineNum":"   54","line":"}"},
{"lineNum":"   55","line":""},
{"lineNum":"   56","line":"pub fn syscall4(number: SYS, arg1: usize, arg2: usize, arg3: usize, arg4: usize) usize {","class":"lineCov","hits":"1","order":"109","possible_hits":"1",},
{"lineNum":"   57","line":"    return asm volatile (\"syscall\"","class":"lineCov","hits":"1","order":"110","possible_hits":"1",},
{"lineNum":"   58","line":"        : [ret] \"={rax}\" (-> usize),"},
{"lineNum":"   59","line":"        : [number] \"{rax}\" (@intFromEnum(number)),"},
{"lineNum":"   60","line":"          [arg1] \"{rdi}\" (arg1),"},
{"lineNum":"   61","line":"          [arg2] \"{rsi}\" (arg2),"},
{"lineNum":"   62","line":"          [arg3] \"{rdx}\" (arg3),"},
{"lineNum":"   63","line":"          [arg4] \"{r10}\" (arg4),"},
{"lineNum":"   64","line":"        : \"rcx\", \"r11\", \"memory\""},
{"lineNum":"   65","line":"    );"},
{"lineNum":"   66","line":"}"},
{"lineNum":"   67","line":""},
{"lineNum":"   68","line":"pub fn syscall5(number: SYS, arg1: usize, arg2: usize, arg3: usize, arg4: usize, arg5: usize) usize {"},
{"lineNum":"   69","line":"    return asm volatile (\"syscall\""},
{"lineNum":"   70","line":"        : [ret] \"={rax}\" (-> usize),"},
{"lineNum":"   71","line":"        : [number] \"{rax}\" (@intFromEnum(number)),"},
{"lineNum":"   72","line":"          [arg1] \"{rdi}\" (arg1),"},
{"lineNum":"   73","line":"          [arg2] \"{rsi}\" (arg2),"},
{"lineNum":"   74","line":"          [arg3] \"{rdx}\" (arg3),"},
{"lineNum":"   75","line":"          [arg4] \"{r10}\" (arg4),"},
{"lineNum":"   76","line":"          [arg5] \"{r8}\" (arg5),"},
{"lineNum":"   77","line":"        : \"rcx\", \"r11\", \"memory\""},
{"lineNum":"   78","line":"    );"},
{"lineNum":"   79","line":"}"},
{"lineNum":"   80","line":""},
{"lineNum":"   81","line":"pub fn syscall6("},
{"lineNum":"   82","line":"    number: SYS,"},
{"lineNum":"   83","line":"    arg1: usize,"},
{"lineNum":"   84","line":"    arg2: usize,"},
{"lineNum":"   85","line":"    arg3: usize,"},
{"lineNum":"   86","line":"    arg4: usize,"},
{"lineNum":"   87","line":"    arg5: usize,"},
{"lineNum":"   88","line":"    arg6: usize,"},
{"lineNum":"   89","line":") usize {","class":"lineCov","hits":"1","order":"764","possible_hits":"1",},
{"lineNum":"   90","line":"    return asm volatile (\"syscall\"","class":"lineCov","hits":"1","order":"765","possible_hits":"1",},
{"lineNum":"   91","line":"        : [ret] \"={rax}\" (-> usize),"},
{"lineNum":"   92","line":"        : [number] \"{rax}\" (@intFromEnum(number)),"},
{"lineNum":"   93","line":"          [arg1] \"{rdi}\" (arg1),"},
{"lineNum":"   94","line":"          [arg2] \"{rsi}\" (arg2),"},
{"lineNum":"   95","line":"          [arg3] \"{rdx}\" (arg3),"},
{"lineNum":"   96","line":"          [arg4] \"{r10}\" (arg4),"},
{"lineNum":"   97","line":"          [arg5] \"{r8}\" (arg5),"},
{"lineNum":"   98","line":"          [arg6] \"{r9}\" (arg6),"},
{"lineNum":"   99","line":"        : \"rcx\", \"r11\", \"memory\""},
{"lineNum":"  100","line":"    );"},
{"lineNum":"  101","line":"}"},
{"lineNum":"  102","line":""},
{"lineNum":"  103","line":"const CloneFn = *const fn (arg: usize) callconv(.C) u8;"},
{"lineNum":"  104","line":""},
{"lineNum":"  105","line":"/// This matches the libc clone function."},
{"lineNum":"  106","line":"pub extern fn clone(func: CloneFn, stack: usize, flags: usize, arg: usize, ptid: *i32, tls: usize, ctid: *i32) usize;"},
{"lineNum":"  107","line":""},
{"lineNum":"  108","line":"pub const restore = restore_rt;"},
{"lineNum":"  109","line":""},
{"lineNum":"  110","line":"pub fn restore_rt() callconv(.Naked) noreturn {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  111","line":"    switch (@import(\"builtin\").zig_backend) {"},
{"lineNum":"  112","line":"        .stage2_c => asm volatile ("},
{"lineNum":"  113","line":"            \\\\ movl %[number], %%eax"},
{"lineNum":"  114","line":"            \\\\ syscall"},
{"lineNum":"  115","line":"            :"},
{"lineNum":"  116","line":"            : [number] \"i\" (@intFromEnum(SYS.rt_sigreturn)),"},
{"lineNum":"  117","line":"            : \"rcx\", \"r11\", \"memory\""},
{"lineNum":"  118","line":"        ),"},
{"lineNum":"  119","line":"        else => asm volatile ("},
{"lineNum":"  120","line":"            \\\\ syscall"},
{"lineNum":"  121","line":"            :"},
{"lineNum":"  122","line":"            : [number] \"{rax}\" (@intFromEnum(SYS.rt_sigreturn)),","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  123","line":"            : \"rcx\", \"r11\", \"memory\""},
{"lineNum":"  124","line":"        ),"},
{"lineNum":"  125","line":"    }"},
{"lineNum":"  126","line":"}"},
{"lineNum":"  127","line":""},
{"lineNum":"  128","line":"pub const mode_t = usize;"},
{"lineNum":"  129","line":"pub const time_t = isize;"},
{"lineNum":"  130","line":"pub const nlink_t = usize;"},
{"lineNum":"  131","line":"pub const blksize_t = isize;"},
{"lineNum":"  132","line":"pub const blkcnt_t = isize;"},
{"lineNum":"  133","line":""},
{"lineNum":"  134","line":"pub const O = struct {"},
{"lineNum":"  135","line":"    pub const CREAT = 0o100;"},
{"lineNum":"  136","line":"    pub const EXCL = 0o200;"},
{"lineNum":"  137","line":"    pub const NOCTTY = 0o400;"},
{"lineNum":"  138","line":"    pub const TRUNC = 0o1000;"},
{"lineNum":"  139","line":"    pub const APPEND = 0o2000;"},
{"lineNum":"  140","line":"    pub const NONBLOCK = 0o4000;"},
{"lineNum":"  141","line":"    pub const DSYNC = 0o10000;"},
{"lineNum":"  142","line":"    pub const SYNC = 0o4010000;"},
{"lineNum":"  143","line":"    pub const RSYNC = 0o4010000;"},
{"lineNum":"  144","line":"    pub const DIRECTORY = 0o200000;"},
{"lineNum":"  145","line":"    pub const NOFOLLOW = 0o400000;"},
{"lineNum":"  146","line":"    pub const CLOEXEC = 0o2000000;"},
{"lineNum":"  147","line":""},
{"lineNum":"  148","line":"    pub const ASYNC = 0o20000;"},
{"lineNum":"  149","line":"    pub const DIRECT = 0o40000;"},
{"lineNum":"  150","line":"    pub const LARGEFILE = 0;"},
{"lineNum":"  151","line":"    pub const NOATIME = 0o1000000;"},
{"lineNum":"  152","line":"    pub const PATH = 0o10000000;"},
{"lineNum":"  153","line":"    pub const TMPFILE = 0o20200000;"},
{"lineNum":"  154","line":"    pub const NDELAY = NONBLOCK;"},
{"lineNum":"  155","line":"};"},
{"lineNum":"  156","line":""},
{"lineNum":"  157","line":"pub const F = struct {"},
{"lineNum":"  158","line":"    pub const DUPFD = 0;"},
{"lineNum":"  159","line":"    pub const GETFD = 1;"},
{"lineNum":"  160","line":"    pub const SETFD = 2;"},
{"lineNum":"  161","line":"    pub const GETFL = 3;"},
{"lineNum":"  162","line":"    pub const SETFL = 4;"},
{"lineNum":"  163","line":"    pub const GETLK = 5;"},
{"lineNum":"  164","line":"    pub const SETLK = 6;"},
{"lineNum":"  165","line":"    pub const SETLKW = 7;"},
{"lineNum":"  166","line":"    pub const SETOWN = 8;"},
{"lineNum":"  167","line":"    pub const GETOWN = 9;"},
{"lineNum":"  168","line":"    pub const SETSIG = 10;"},
{"lineNum":"  169","line":"    pub const GETSIG = 11;"},
{"lineNum":"  170","line":""},
{"lineNum":"  171","line":"    pub const SETOWN_EX = 15;"},
{"lineNum":"  172","line":"    pub const GETOWN_EX = 16;"},
{"lineNum":"  173","line":"    pub const GETOWNER_UIDS = 17;"},
{"lineNum":"  174","line":""},
{"lineNum":"  175","line":"    pub const RDLCK = 0;"},
{"lineNum":"  176","line":"    pub const WRLCK = 1;"},
{"lineNum":"  177","line":"    pub const UNLCK = 2;"},
{"lineNum":"  178","line":"};"},
{"lineNum":"  179","line":""},
{"lineNum":"  180","line":"pub const MAP = struct {"},
{"lineNum":"  181","line":"    /// only give out 32bit addresses"},
{"lineNum":"  182","line":"    pub const @\"32BIT\" = 0x40;"},
{"lineNum":"  183","line":"    /// stack-like segment"},
{"lineNum":"  184","line":"    pub const GROWSDOWN = 0x0100;"},
{"lineNum":"  185","line":"    /// ETXTBSY"},
{"lineNum":"  186","line":"    pub const DENYWRITE = 0x0800;"},
{"lineNum":"  187","line":"    /// mark it as an executable"},
{"lineNum":"  188","line":"    pub const EXECUTABLE = 0x1000;"},
{"lineNum":"  189","line":"    /// pages are locked"},
{"lineNum":"  190","line":"    pub const LOCKED = 0x2000;"},
{"lineNum":"  191","line":"    /// don\'t check for reservations"},
{"lineNum":"  192","line":"    pub const NORESERVE = 0x4000;"},
{"lineNum":"  193","line":"};"},
{"lineNum":"  194","line":""},
{"lineNum":"  195","line":"pub const VDSO = struct {"},
{"lineNum":"  196","line":"    pub const CGT_SYM = \"__vdso_clock_gettime\";"},
{"lineNum":"  197","line":"    pub const CGT_VER = \"LINUX_2.6\";"},
{"lineNum":"  198","line":""},
{"lineNum":"  199","line":"    pub const GETCPU_SYM = \"__vdso_getcpu\";"},
{"lineNum":"  200","line":"    pub const GETCPU_VER = \"LINUX_2.6\";"},
{"lineNum":"  201","line":"};"},
{"lineNum":"  202","line":""},
{"lineNum":"  203","line":"pub const ARCH = struct {"},
{"lineNum":"  204","line":"    pub const SET_GS = 0x1001;"},
{"lineNum":"  205","line":"    pub const SET_FS = 0x1002;"},
{"lineNum":"  206","line":"    pub const GET_FS = 0x1003;"},
{"lineNum":"  207","line":"    pub const GET_GS = 0x1004;"},
{"lineNum":"  208","line":"};"},
{"lineNum":"  209","line":""},
{"lineNum":"  210","line":"pub const REG = struct {"},
{"lineNum":"  211","line":"    pub const R8 = 0;"},
{"lineNum":"  212","line":"    pub const R9 = 1;"},
{"lineNum":"  213","line":"    pub const R10 = 2;"},
{"lineNum":"  214","line":"    pub const R11 = 3;"},
{"lineNum":"  215","line":"    pub const R12 = 4;"},
{"lineNum":"  216","line":"    pub const R13 = 5;"},
{"lineNum":"  217","line":"    pub const R14 = 6;"},
{"lineNum":"  218","line":"    pub const R15 = 7;"},
{"lineNum":"  219","line":"    pub const RDI = 8;"},
{"lineNum":"  220","line":"    pub const RSI = 9;"},
{"lineNum":"  221","line":"    pub const RBP = 10;"},
{"lineNum":"  222","line":"    pub const RBX = 11;"},
{"lineNum":"  223","line":"    pub const RDX = 12;"},
{"lineNum":"  224","line":"    pub const RAX = 13;"},
{"lineNum":"  225","line":"    pub const RCX = 14;"},
{"lineNum":"  226","line":"    pub const RSP = 15;"},
{"lineNum":"  227","line":"    pub const RIP = 16;"},
{"lineNum":"  228","line":"    pub const EFL = 17;"},
{"lineNum":"  229","line":"    pub const CSGSFS = 18;"},
{"lineNum":"  230","line":"    pub const ERR = 19;"},
{"lineNum":"  231","line":"    pub const TRAPNO = 20;"},
{"lineNum":"  232","line":"    pub const OLDMASK = 21;"},
{"lineNum":"  233","line":"    pub const CR2 = 22;"},
{"lineNum":"  234","line":"};"},
{"lineNum":"  235","line":""},
{"lineNum":"  236","line":"pub const LOCK = struct {"},
{"lineNum":"  237","line":"    pub const SH = 1;"},
{"lineNum":"  238","line":"    pub const EX = 2;"},
{"lineNum":"  239","line":"    pub const NB = 4;"},
{"lineNum":"  240","line":"    pub const UN = 8;"},
{"lineNum":"  241","line":"};"},
{"lineNum":"  242","line":""},
{"lineNum":"  243","line":"pub const Flock = extern struct {"},
{"lineNum":"  244","line":"    type: i16,"},
{"lineNum":"  245","line":"    whence: i16,"},
{"lineNum":"  246","line":"    start: off_t,"},
{"lineNum":"  247","line":"    len: off_t,"},
{"lineNum":"  248","line":"    pid: pid_t,"},
{"lineNum":"  249","line":"};"},
{"lineNum":"  250","line":""},
{"lineNum":"  251","line":"pub const msghdr = extern struct {"},
{"lineNum":"  252","line":"    name: ?*sockaddr,"},
{"lineNum":"  253","line":"    namelen: socklen_t,"},
{"lineNum":"  254","line":"    iov: [*]iovec,"},
{"lineNum":"  255","line":"    iovlen: i32,"},
{"lineNum":"  256","line":"    __pad1: i32 = 0,"},
{"lineNum":"  257","line":"    control: ?*anyopaque,"},
{"lineNum":"  258","line":"    controllen: socklen_t,"},
{"lineNum":"  259","line":"    __pad2: socklen_t = 0,"},
{"lineNum":"  260","line":"    flags: i32,"},
{"lineNum":"  261","line":"};"},
{"lineNum":"  262","line":""},
{"lineNum":"  263","line":"pub const msghdr_const = extern struct {"},
{"lineNum":"  264","line":"    name: ?*const sockaddr,"},
{"lineNum":"  265","line":"    namelen: socklen_t,"},
{"lineNum":"  266","line":"    iov: [*]const iovec_const,"},
{"lineNum":"  267","line":"    iovlen: i32,"},
{"lineNum":"  268","line":"    __pad1: i32 = 0,"},
{"lineNum":"  269","line":"    control: ?*const anyopaque,"},
{"lineNum":"  270","line":"    controllen: socklen_t,"},
{"lineNum":"  271","line":"    __pad2: socklen_t = 0,"},
{"lineNum":"  272","line":"    flags: i32,"},
{"lineNum":"  273","line":"};"},
{"lineNum":"  274","line":""},
{"lineNum":"  275","line":"pub const off_t = i64;"},
{"lineNum":"  276","line":"pub const ino_t = u64;"},
{"lineNum":"  277","line":"pub const dev_t = u64;"},
{"lineNum":"  278","line":""},
{"lineNum":"  279","line":"// The `stat` definition used by the Linux kernel."},
{"lineNum":"  280","line":"pub const Stat = extern struct {"},
{"lineNum":"  281","line":"    dev: dev_t,"},
{"lineNum":"  282","line":"    ino: ino_t,"},
{"lineNum":"  283","line":"    nlink: usize,"},
{"lineNum":"  284","line":""},
{"lineNum":"  285","line":"    mode: u32,"},
{"lineNum":"  286","line":"    uid: uid_t,"},
{"lineNum":"  287","line":"    gid: gid_t,"},
{"lineNum":"  288","line":"    __pad0: u32,"},
{"lineNum":"  289","line":"    rdev: dev_t,"},
{"lineNum":"  290","line":"    size: off_t,"},
{"lineNum":"  291","line":"    blksize: isize,"},
{"lineNum":"  292","line":"    blocks: i64,"},
{"lineNum":"  293","line":""},
{"lineNum":"  294","line":"    atim: timespec,"},
{"lineNum":"  295","line":"    mtim: timespec,"},
{"lineNum":"  296","line":"    ctim: timespec,"},
{"lineNum":"  297","line":"    __unused: [3]isize,"},
{"lineNum":"  298","line":""},
{"lineNum":"  299","line":"    pub fn atime(self: @This()) timespec {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  300","line":"        return self.atim;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  301","line":"    }"},
{"lineNum":"  302","line":""},
{"lineNum":"  303","line":"    pub fn mtime(self: @This()) timespec {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  304","line":"        return self.mtim;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  305","line":"    }"},
{"lineNum":"  306","line":""},
{"lineNum":"  307","line":"    pub fn ctime(self: @This()) timespec {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  308","line":"        return self.ctim;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  309","line":"    }"},
{"lineNum":"  310","line":"};"},
{"lineNum":"  311","line":""},
{"lineNum":"  312","line":"pub const timeval = extern struct {"},
{"lineNum":"  313","line":"    tv_sec: isize,"},
{"lineNum":"  314","line":"    tv_usec: isize,"},
{"lineNum":"  315","line":"};"},
{"lineNum":"  316","line":""},
{"lineNum":"  317","line":"pub const timezone = extern struct {"},
{"lineNum":"  318","line":"    tz_minuteswest: i32,"},
{"lineNum":"  319","line":"    tz_dsttime: i32,"},
{"lineNum":"  320","line":"};"},
{"lineNum":"  321","line":""},
{"lineNum":"  322","line":"pub const Elf_Symndx = u32;"},
{"lineNum":"  323","line":""},
{"lineNum":"  324","line":"pub const greg_t = usize;"},
{"lineNum":"  325","line":"pub const gregset_t = [23]greg_t;"},
{"lineNum":"  326","line":"pub const fpstate = extern struct {"},
{"lineNum":"  327","line":"    cwd: u16,"},
{"lineNum":"  328","line":"    swd: u16,"},
{"lineNum":"  329","line":"    ftw: u16,"},
{"lineNum":"  330","line":"    fop: u16,"},
{"lineNum":"  331","line":"    rip: usize,"},
{"lineNum":"  332","line":"    rdp: usize,"},
{"lineNum":"  333","line":"    mxcsr: u32,"},
{"lineNum":"  334","line":"    mxcr_mask: u32,"},
{"lineNum":"  335","line":"    st: [8]extern struct {"},
{"lineNum":"  336","line":"        significand: [4]u16,"},
{"lineNum":"  337","line":"        exponent: u16,"},
{"lineNum":"  338","line":"        padding: [3]u16 = undefined,"},
{"lineNum":"  339","line":"    },"},
{"lineNum":"  340","line":"    xmm: [16]extern struct {"},
{"lineNum":"  341","line":"        element: [4]u32,"},
{"lineNum":"  342","line":"    },"},
{"lineNum":"  343","line":"    padding: [24]u32 = undefined,"},
{"lineNum":"  344","line":"};"},
{"lineNum":"  345","line":"pub const fpregset_t = *fpstate;"},
{"lineNum":"  346","line":"pub const sigcontext = extern struct {"},
{"lineNum":"  347","line":"    r8: usize,"},
{"lineNum":"  348","line":"    r9: usize,"},
{"lineNum":"  349","line":"    r10: usize,"},
{"lineNum":"  350","line":"    r11: usize,"},
{"lineNum":"  351","line":"    r12: usize,"},
{"lineNum":"  352","line":"    r13: usize,"},
{"lineNum":"  353","line":"    r14: usize,"},
{"lineNum":"  354","line":"    r15: usize,"},
{"lineNum":"  355","line":""},
{"lineNum":"  356","line":"    rdi: usize,"},
{"lineNum":"  357","line":"    rsi: usize,"},
{"lineNum":"  358","line":"    rbp: usize,"},
{"lineNum":"  359","line":"    rbx: usize,"},
{"lineNum":"  360","line":"    rdx: usize,"},
{"lineNum":"  361","line":"    rax: usize,"},
{"lineNum":"  362","line":"    rcx: usize,"},
{"lineNum":"  363","line":"    rsp: usize,"},
{"lineNum":"  364","line":"    rip: usize,"},
{"lineNum":"  365","line":"    eflags: usize,"},
{"lineNum":"  366","line":""},
{"lineNum":"  367","line":"    cs: u16,"},
{"lineNum":"  368","line":"    gs: u16,"},
{"lineNum":"  369","line":"    fs: u16,"},
{"lineNum":"  370","line":"    pad0: u16 = undefined,"},
{"lineNum":"  371","line":""},
{"lineNum":"  372","line":"    err: usize,"},
{"lineNum":"  373","line":"    trapno: usize,"},
{"lineNum":"  374","line":"    oldmask: usize,"},
{"lineNum":"  375","line":"    cr2: usize,"},
{"lineNum":"  376","line":""},
{"lineNum":"  377","line":"    fpstate: *fpstate,"},
{"lineNum":"  378","line":"    reserved1: [8]usize = undefined,"},
{"lineNum":"  379","line":"};"},
{"lineNum":"  380","line":""},
{"lineNum":"  381","line":"pub const mcontext_t = extern struct {"},
{"lineNum":"  382","line":"    gregs: gregset_t,"},
{"lineNum":"  383","line":"    fpregs: fpregset_t,"},
{"lineNum":"  384","line":"    reserved1: [8]usize = undefined,"},
{"lineNum":"  385","line":"};"},
{"lineNum":"  386","line":""},
{"lineNum":"  387","line":"pub const ucontext_t = extern struct {"},
{"lineNum":"  388","line":"    flags: usize,"},
{"lineNum":"  389","line":"    link: ?*ucontext_t,"},
{"lineNum":"  390","line":"    stack: stack_t,"},
{"lineNum":"  391","line":"    mcontext: mcontext_t,"},
{"lineNum":"  392","line":"    sigmask: sigset_t,"},
{"lineNum":"  393","line":"    fpregs_mem: [64]usize,"},
{"lineNum":"  394","line":"};"},
{"lineNum":"  395","line":""},
{"lineNum":"  396","line":"fn gpRegisterOffset(comptime reg_index: comptime_int) usize {"},
{"lineNum":"  397","line":"    return @offsetOf(ucontext_t, \"mcontext\") + @offsetOf(mcontext_t, \"gregs\") + @sizeOf(usize) * reg_index;"},
{"lineNum":"  398","line":"}"},
{"lineNum":"  399","line":""},
{"lineNum":"  400","line":"fn getContextInternal() callconv(.Naked) usize {","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  401","line":"    // TODO: Read GS/FS registers?"},
{"lineNum":"  402","line":"    asm volatile ("},
{"lineNum":"  403","line":"        \\\\ movq $0, %[flags_offset:c](%%rdi)"},
{"lineNum":"  404","line":"        \\\\ movq $0, %[link_offset:c](%%rdi)"},
{"lineNum":"  405","line":"        \\\\ movq %%r8, %[r8_offset:c](%%rdi)"},
{"lineNum":"  406","line":"        \\\\ movq %%r9, %[r9_offset:c](%%rdi)"},
{"lineNum":"  407","line":"        \\\\ movq %%r10, %[r10_offset:c](%%rdi)"},
{"lineNum":"  408","line":"        \\\\ movq %%r11, %[r11_offset:c](%%rdi)"},
{"lineNum":"  409","line":"        \\\\ movq %%r12, %[r12_offset:c](%%rdi)"},
{"lineNum":"  410","line":"        \\\\ movq %%r13, %[r13_offset:c](%%rdi)"},
{"lineNum":"  411","line":"        \\\\ movq %%r14, %[r14_offset:c](%%rdi)"},
{"lineNum":"  412","line":"        \\\\ movq %%r15, %[r15_offset:c](%%rdi)"},
{"lineNum":"  413","line":"        \\\\ movq %%rdi, %[rdi_offset:c](%%rdi)"},
{"lineNum":"  414","line":"        \\\\ movq %%rsi, %[rsi_offset:c](%%rdi)"},
{"lineNum":"  415","line":"        \\\\ movq %%rbp, %[rbp_offset:c](%%rdi)"},
{"lineNum":"  416","line":"        \\\\ movq %%rbx, %[rbx_offset:c](%%rdi)"},
{"lineNum":"  417","line":"        \\\\ movq %%rdx, %[rdx_offset:c](%%rdi)"},
{"lineNum":"  418","line":"        \\\\ movq %%rax, %[rax_offset:c](%%rdi)"},
{"lineNum":"  419","line":"        \\\\ movq %%rcx, %[rcx_offset:c](%%rdi)"},
{"lineNum":"  420","line":"        \\\\ movq (%%rsp), %%rcx"},
{"lineNum":"  421","line":"        \\\\ movq %%rcx, %[rip_offset:c](%%rdi)"},
{"lineNum":"  422","line":"        \\\\ leaq 8(%%rsp), %%rcx"},
{"lineNum":"  423","line":"        \\\\ movq %%rcx, %[rsp_offset:c](%%rdi)"},
{"lineNum":"  424","line":"        \\\\ pushfq"},
{"lineNum":"  425","line":"        \\\\ popq %[efl_offset:c](%%rdi)"},
{"lineNum":"  426","line":"        \\\\ leaq %[fpmem_offset:c](%%rdi), %%rcx"},
{"lineNum":"  427","line":"        \\\\ movq %%rcx, %[fpstate_offset:c](%%rdi)"},
{"lineNum":"  428","line":"        \\\\ fnstenv (%%rcx)"},
{"lineNum":"  429","line":"        \\\\ fldenv (%%rcx)"},
{"lineNum":"  430","line":"        \\\\ stmxcsr %[mxcsr_offset:c](%%rdi)"},
{"lineNum":"  431","line":"        \\\\ leaq %[stack_offset:c](%%rdi), %%rsi"},
{"lineNum":"  432","line":"        \\\\ movq %%rdi, %%r8"},
{"lineNum":"  433","line":"        \\\\ xorl %%edi, %%edi"},
{"lineNum":"  434","line":"        \\\\ movq %[sigaltstack], %%rax"},
{"lineNum":"  435","line":"        \\\\ syscall"},
{"lineNum":"  436","line":"        \\\\ testq %%rax, %%rax"},
{"lineNum":"  437","line":"        \\\\ jnz 0f"},
{"lineNum":"  438","line":"        \\\\ movq %[sigprocmask], %%rax"},
{"lineNum":"  439","line":"        \\\\ xorl %%esi, %%esi"},
{"lineNum":"  440","line":"        \\\\ leaq %[sigmask_offset:c](%%r8), %%rdx"},
{"lineNum":"  441","line":"        \\\\ movl %[sigset_size], %%r10d"},
{"lineNum":"  442","line":"        \\\\ syscall"},
{"lineNum":"  443","line":"        \\\\0:"},
{"lineNum":"  444","line":"        \\\\ retq"},
{"lineNum":"  445","line":"        :"},
{"lineNum":"  446","line":"        : [flags_offset] \"i\" (@offsetOf(ucontext_t, \"flags\")),"},
{"lineNum":"  447","line":"          [link_offset] \"i\" (@offsetOf(ucontext_t, \"link\")),"},
{"lineNum":"  448","line":"          [r8_offset] \"i\" (comptime gpRegisterOffset(REG.R8)),"},
{"lineNum":"  449","line":"          [r9_offset] \"i\" (comptime gpRegisterOffset(REG.R9)),"},
{"lineNum":"  450","line":"          [r10_offset] \"i\" (comptime gpRegisterOffset(REG.R10)),"},
{"lineNum":"  451","line":"          [r11_offset] \"i\" (comptime gpRegisterOffset(REG.R11)),"},
{"lineNum":"  452","line":"          [r12_offset] \"i\" (comptime gpRegisterOffset(REG.R12)),"},
{"lineNum":"  453","line":"          [r13_offset] \"i\" (comptime gpRegisterOffset(REG.R13)),"},
{"lineNum":"  454","line":"          [r14_offset] \"i\" (comptime gpRegisterOffset(REG.R14)),"},
{"lineNum":"  455","line":"          [r15_offset] \"i\" (comptime gpRegisterOffset(REG.R15)),"},
{"lineNum":"  456","line":"          [rdi_offset] \"i\" (comptime gpRegisterOffset(REG.RDI)),"},
{"lineNum":"  457","line":"          [rsi_offset] \"i\" (comptime gpRegisterOffset(REG.RSI)),"},
{"lineNum":"  458","line":"          [rbp_offset] \"i\" (comptime gpRegisterOffset(REG.RBP)),"},
{"lineNum":"  459","line":"          [rbx_offset] \"i\" (comptime gpRegisterOffset(REG.RBX)),"},
{"lineNum":"  460","line":"          [rdx_offset] \"i\" (comptime gpRegisterOffset(REG.RDX)),"},
{"lineNum":"  461","line":"          [rax_offset] \"i\" (comptime gpRegisterOffset(REG.RAX)),"},
{"lineNum":"  462","line":"          [rcx_offset] \"i\" (comptime gpRegisterOffset(REG.RCX)),"},
{"lineNum":"  463","line":"          [rsp_offset] \"i\" (comptime gpRegisterOffset(REG.RSP)),"},
{"lineNum":"  464","line":"          [rip_offset] \"i\" (comptime gpRegisterOffset(REG.RIP)),"},
{"lineNum":"  465","line":"          [efl_offset] \"i\" (comptime gpRegisterOffset(REG.EFL)),"},
{"lineNum":"  466","line":"          [fpstate_offset] \"i\" (@offsetOf(ucontext_t, \"mcontext\") + @offsetOf(mcontext_t, \"fpregs\")),"},
{"lineNum":"  467","line":"          [fpmem_offset] \"i\" (@offsetOf(ucontext_t, \"fpregs_mem\")),"},
{"lineNum":"  468","line":"          [mxcsr_offset] \"i\" (@offsetOf(ucontext_t, \"fpregs_mem\") + @offsetOf(fpstate, \"mxcsr\")),"},
{"lineNum":"  469","line":"          [sigaltstack] \"i\" (@intFromEnum(linux.SYS.sigaltstack)),"},
{"lineNum":"  470","line":"          [stack_offset] \"i\" (@offsetOf(ucontext_t, \"stack\")),"},
{"lineNum":"  471","line":"          [sigprocmask] \"i\" (@intFromEnum(linux.SYS.rt_sigprocmask)),"},
{"lineNum":"  472","line":"          [sigmask_offset] \"i\" (@offsetOf(ucontext_t, \"sigmask\")),"},
{"lineNum":"  473","line":"          [sigset_size] \"i\" (linux.NSIG / 8),","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  474","line":"        : \"cc\", \"memory\", \"rax\", \"rcx\", \"rdx\", \"rdi\", \"rsi\", \"r8\", \"r10\", \"r11\""},
{"lineNum":"  475","line":"    );"},
{"lineNum":"  476","line":"}"},
{"lineNum":"  477","line":""},
{"lineNum":"  478","line":"pub inline fn getcontext(context: *ucontext_t) usize {"},
{"lineNum":"  479","line":"    // This method is used so that getContextInternal can control"},
{"lineNum":"  480","line":"    // its prologue in order to read RSP from a constant offset"},
{"lineNum":"  481","line":"    // An aligned stack is not needed for getContextInternal."},
{"lineNum":"  482","line":"    var clobber_rdi: usize = undefined;","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  483","line":"    return asm volatile (","class":"lineNoCov","hits":"0","possible_hits":"1",},
{"lineNum":"  484","line":"        \\\\ callq %[getContextInternal:P]"},
{"lineNum":"  485","line":"        : [_] \"={rax}\" (-> usize),"},
{"lineNum":"  486","line":"          [_] \"={rdi}\" (clobber_rdi),"},
{"lineNum":"  487","line":"        : [_] \"{rdi}\" (context),"},
{"lineNum":"  488","line":"          [getContextInternal] \"X\" (&getContextInternal),"},
{"lineNum":"  489","line":"        : \"cc\", \"memory\", \"rcx\", \"rdx\", \"rsi\", \"r8\", \"r10\", \"r11\""},
{"lineNum":"  490","line":"    );"},
{"lineNum":"  491","line":"}"},
]};
var percent_low = 25;var percent_high = 75;
var header = { "command" : "test", "date" : "2024-04-26 16:14:49", "instrumented" : 24, "covered" : 12,};
var merged_data = [];
